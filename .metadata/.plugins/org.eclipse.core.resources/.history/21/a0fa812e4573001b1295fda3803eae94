import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

public class CombinationSum {
	static List<List<Integer>> combi;
	static int[] nums;
	static int trgt;
	public static void combinationSumUtil(List<Integer> comb, int idx, int sum) {
		if (sum > trgt) return;
		if (sum == trgt) {
			combi.add(new ArrayList<>(comb));
		}
		else if (target < 0)
			return false;
		
		boolean ret = true;
		for (int i = 0; i < candidates.length; i++) {
			res.add(candidates[i]);
			ret = combinationSumUtil(candidates, target - candidates[i], res);
			if (!ret)
				res.remove(res.size()-1);
		}
		return ret;
    }
	public static List<List<Integer>> combinationSum(int[] candidates, int target) {
		combi = new LinkedList<>();
		nums = candidates;
		trgt = target;
		combinationSumUtil(new ArrayList<>(), 0, 0);
        return combi;        
    }
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {2, 3, 6, 7};
		System.out.println(combinationSum(arr, 7));
	}

}
